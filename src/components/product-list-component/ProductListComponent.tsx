import { FC, ReactNode, useState } from 'react';
import { Product } from '../../types';
import styles from './ProductListComponent.module.scss';
import classNames from 'classnames';
import Button from '../button/Button';
import { useNavigate } from 'react-router-dom';

type ProductListComponentProps = Product & { children?: ReactNode };

const ProductListComponent: FC<ProductListComponentProps> = ({
  id,
  title,
  price,
  image,
  category,
  description,
  stock,
}) => {
  const [quantityInCart, setQuantityInCart] = useState(0); //–∏—Å–ø—Ä–∞–≤–∏—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞—è –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∫–æ—Ä–∑–∏–Ω–µ

  const handlIncrQuantity = () => {
    setQuantityInCart((prev) => ++prev);
  };

  const handlDecrQuantity = () => {
    setQuantityInCart((prev) => --prev);
  };

  const navigate = useNavigate();
  const [isSelecting, setIsSelecting] = useState(false);

  const handleMouseDown = () => {
    setIsSelecting(false);
  };
  const handleMouseMove = () => {
    setIsSelecting(true);
  };
  const handleMouseUp = () => {
    if (!isSelecting) {
      navigate(`/products/${id}`);
    }
  };

  return (
    <div className={classNames(styles.productComponentContainer)}>
      <div
        onMouseDown={handleMouseDown}
        onMouseMove={handleMouseMove}
        onMouseUp={handleMouseUp}
        className={classNames(styles.productMainInfoContainer)}
      >
        <div className={classNames(styles.imgContainer)}>
          <img src={image} alt={`Image of the ${title}`} />
          {/* –ú–∞–ª–µ–Ω—å–∫–∏–π —Ä–∞–∑–º–µ—Ä. –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ –µ—â–µ –º–µ–Ω—å—à–µ */}
        </div>
        <div className={classNames(styles.mainInfoContainer)}>
          <h3>{title}</h3>
          <p className={classNames(styles.category)}>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}</p>
          {/* –≤—ã–¥–µ–ª–∏ –∂–∏—Ä–Ω—ã–º */}
          <p className={classNames(styles.description)}>{description}</p>
          {/* –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç—å –æ–±—Ä—ã–≤–∞–µ—Ç—Å—è —Å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ–º */}
          <div className={classNames(styles.price)}>{price} —É.–µ.</div>
          {/* –≤—ã–¥–µ–ª–∏ –∂–∏—Ä–Ω—ã–º */}
        </div>
      </div>
      <div className="manualsContainer" onClick={(e) => e.stopPropagation()}>
        {quantityInCart > 0 ? (
          <–°hangeQuantityItem onClickMinus={handlDecrQuantity} onClickPlus={handlIncrQuantity}>
            {0}
          </–°hangeQuantityItem>
        ) : (
          <Button onClick={() => {}}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</Button>
        )}
      </div>
    </div>
  );
};

export default ProductListComponent;

const –°hangeQuantityItem: FC<{
  children: number;
  onClickPlus: () => void;
  onClickMinus: () => void;
}> = ({ children, onClickPlus, onClickMinus }) => {
  return (
    <>
      <Button onClick={onClickMinus}>-</Button>
      {children}
      <Button onClick={onClickPlus}>+</Button>
    </>
  );
};

// .cover-img {
//   width: 300px;
//   height: 200px;
//   object-fit: cover; // –û–±—Ä–µ–∂–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
//   border-radius: 5px;
// }
// üîπ object-fit: contain; ‚Äì –≤–ø–∏—Å—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏.
// üîπ object-fit: cover; ‚Äì –æ–±—Ä–µ–∑–∞–µ—Ç —á–∞—Å—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä.
// üîπ object-fit: fill; ‚Äì —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –º–æ–∂–µ—Ç –∏—Å–∫–∞–∑–∏—Ç—å –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏.
